apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "s3proxy.fullname" . }}
  labels:
    {{- include "s3proxy.labels" . | nindent 4 }}
  annotations:
    checkov.io/skip1: CKV_K8S_35=Inorder to use a generated secret in two ways we can't do this
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "s3proxy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "s3proxy.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "s3proxy.serviceAccountName" . }}
      automountServiceAccountToken: false
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          #checkov:skip=CKV_K8S_43: Not for Public Charts
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            {{- .Values.command | toYaml | nindent 12 }}
          args:
            {{- .Values.args | toYaml | nindent 12 }}
          env:
          - name: S3PROXY_IDENTITY
            valueFrom:
              secretKeyRef:
                {{- if empty .Values.existingSecretName }}
                name: "{{ include "s3proxy.fullname" . }}-awsclient"
                {{- else }}
                name: {{ .Values.existingSecretName }}
                {{- end }}
                key: AWS_ACCESS_KEY_ID
                optional: false
          - name: S3PROXY_CREDENTIAL
            valueFrom:
              secretKeyRef:
                {{- if empty .Values.existingSecretName }}
                name: "{{ include "s3proxy.fullname" . }}-awsclient"
                {{- else }}
                name: {{ .Values.existingSecretName }}
                {{- end }}
                key: AWS_SECRET_ACCESS_KEY
                optional: false
          {{- with .Values.config.env }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          {{- if eq .Values.config.jclouds.provider "filesystem" }}
          - mountPath: {{ .Values.config.jclouds.filesystem.baseDir }}
            name: tmp-volume
          {{- end }}
          - name: secret-volume
            readOnly: true
            mountPath: "/etc/s3proxy"
      volumes:
      {{- if eq .Values.config.jclouds.provider "filesystem" }}
      - name: tmp-volume
        emptyDir:
          sizeLimit: {{ .Values.config.jclouds.filesystem.tmpSize }}
      {{- end }}
      - name: secret-volume
        secret:
          secretName: {{ include "s3proxy.fullname" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
